<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:jee="http://www.springframework.org/schema/jee" xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:context="http://www.springframework.org/schema/context" xmlns:mvc="http://www.springframework.org/schema/mvc"
  xmlns:tx="http://www.springframework.org/schema/tx" 
  xsi:schemaLocation="http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd 
  		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
	
	<context:property-placeholder location="classpath:security.properties" />
	
	<!-- Scans the classpath for annotated components that will be auto-registered as Spring beans.
	 For example @Controller and @Service. Make sure to set the correct base-package-->
	<context:component-scan base-package="com.tekusource.sabongpro"/>
	
	<!-- Activates various annotations to be detected in bean classes -->
	<context:annotation-config/>
	
	<!-- Configures the annotation-driven Spring MVC Controller programming model.
	Note that, with Spring 3.0, this tag works in Servlet MVC only!  -->
	<mvc:annotation-driven/>
	
	<tx:annotation-driven/>
	
	<!-- persistence -->
	<!-- <jee:jndi-lookup id="dataSource" jndi-name="java:jboss/datasources/MySQLDS" /> -->
	
  	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
    	<property name="driverClassName" value="${database.driverClassName}" />
    	<property name="url" value="${database.url}" />
    	<property name="username" value="${database.username}" />
    	<property name="password" value="${database.password}" />
 	</bean>
 	
  	<bean id="jpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
    	<property name="databasePlatform" value="${database.dialect}" />
    	<property name="showSql" value="false" />
    	<property name="generateDdl" value="true" />
  	</bean>

  	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
    	<property name="persistenceXmlLocation" value="classpath:/META-INF/persistence.xml" />
    	<property name="persistenceUnitName" value="persitenceUnit" />
    	<property name="dataSource" ref="dataSource" />
    	<property name="jpaVendorAdapter" ref="jpaVendorAdapter" />
    	<property name="jpaPropertyMap">
      		<map>
      			<!-- <entry key="hibernate.dialect" value="${database.dialect}"/>
      			<entry key="hibernate.transaction.jta.platform" value="org.hibernate.service.jta.platform.internal.JBossAppServerJtaPlatform"/> -->
        		<entry key="hibernate.hbm2ddl.auto" value="update" />
        		<entry key="hibernate.jdbc.batch_size" value="0" />
      		</map>
    	</property>
 	 </bean>
  
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
    	<property name="entityManagerFactory" ref="entityManagerFactory" />
    	<property name="dataSource" ref="dataSource" />
	</bean>
	
	<bean id="passwordEncryptor" class="org.jasypt.encryption.pbe.StandardPBEStringEncryptor" >
    	<property name="algorithm" value="PBEWithMD5AndDES" />
    	<property name="password" value="${jasypt.encryptor.masterpassword.changeme}" />
  	</bean>
  
	<!-- This Spring Security-friendly PasswordEncoder implementation will -->
  	<!-- wrap the PBEStringEncryptor instance so that it can be used from  -->
  	<!-- the security framework.                                           -->
  	<bean id="passwordEncoder" class="org.jasypt.spring.security3.PBEPasswordEncoder">
    	<property name="pbeStringEncryptor">
      		<ref bean="passwordEncryptor" />
    	</property>
 	</bean>
</beans>
